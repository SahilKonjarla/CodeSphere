import os
from dotenv import load_dotenv
from langchain_openai import ChatOpenAI
from app.utils.prompts import get_learner_prompt
from app.db.user_logs import get_user_logs

# Load Environment Variables
load_dotenv()  # Ensure the .env file is loaded

# Access the API key
OPEN_AI_KEY = os.getenv("OPENAI_API_KEY")
if not OPEN_AI_KEY:
    raise Exception("OPENAI_API_KEY environment variable not set")

# Initialize the LLM
model = ChatOpenAI(model="gpt-4o-mini")


def process_learner_request(user_id: str):
    """
    Generate learning recommendations for the user based on recent logs.

    :param user_id: The ID of the user
    :return: Recommendations generated by the Learner Agent.
    """
    # Fetch the recent logs
    logs = get_user_logs(user_id=user_id)

    if not logs:
        raise ValueError("No logs found for user {}".format(user_id))

    # Parse the logs for useful data
    parsed_data = parse_logs(logs)
